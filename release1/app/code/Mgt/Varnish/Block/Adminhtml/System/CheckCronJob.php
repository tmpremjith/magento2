<?php
 namespace Mgt\Varnish\Block\Adminhtml\System; class CheckCronJob extends \Magento\Backend\Block\Template { const CACHE_WARMER_CACHE_KEY = "\x4d\x67\164\x43\x61\x63\x68\x65\127\x61\x72\x6d\145\162"; const CRON_WARNING_MESSAGE_MINUTES = 10; protected $cache; protected $varnishConfig; protected $config; protected $directoryList; public function __construct(\Magento\Backend\Block\Template\Context $context, \Magento\Framework\App\Filesystem\DirectoryList $directoryList, \Mgt\Varnish\Model\Cache\Backend\File $cache, \Magento\Framework\App\Config $config, \Mgt\Varnish\Model\Cache\Config $varnishConfig, array $data = []) { goto C73e9; fd246: $this->cache = $cache; goto b2404; Cfa77: $this->directoryList = $directoryList; goto fd246; b2404: $this->config = $config; goto fc795; fc795: $this->varnishConfig = $varnishConfig; goto E9d03; C73e9: parent::__construct($context, $data); goto Cfa77; E9d03: } public function isVarnishEnabled() { $isVarnishEnabled = $this->varnishConfig->isEnabled(); return $isVarnishEnabled; } public function isCacheWarmerEnabled() { $isCacheWarmerEnabled = $this->varnishConfig->isCacheWarmerEnabled(); return $isCacheWarmerEnabled; } public function showCronNotRunningMessage() { goto fb107; B6040: $showCronNotRunningMessage = true; goto e63bc; Db961: $dateDiff = $now->diff($lastRunning); goto bf5b7; e53e5: $lastRunning->setTimezone(new \DateTimeZone("\x55\x54\103")); goto Fd747; bf5b7: $totalMinutes = $dateDiff->days * 24 * 60; goto f89df; Fb566: $lastRunningTimestamp = $this->getLastRunningTimestamp(); goto D0887; A7951: if (!(true === $isVarnishEnabled && true === $isCacheWarmerEnabled)) { goto Bdfe5; } goto Fb566; Fd747: $lastRunning->setTimestamp($lastRunningTimestamp); goto Db961; e9561: $isCacheWarmerEnabled = $this->isCacheWarmerEnabled(); goto A7951; E7d0e: Ed0d4: goto D4082; fade0: $isVarnishEnabled = $this->isVarnishEnabled(); goto e9561; D4082: goto fef84; goto Dba85; Dba85: bfe08: goto B6040; fb107: $showCronNotRunningMessage = false; goto fade0; bb3c8: if (!($totalMinutes >= self::CRON_WARNING_MESSAGE_MINUTES)) { goto Ed0d4; } goto f454a; B7468: Bdfe5: goto fbc5d; fbc5d: return $showCronNotRunningMessage; goto bd855; D0887: if (0 == $lastRunningTimestamp) { goto bfe08; } goto d62bb; ad0a9: $totalMinutes += $dateDiff->i; goto bb3c8; f89df: $totalMinutes += $dateDiff->h * 60; goto ad0a9; f454a: $showCronNotRunningMessage = true; goto E7d0e; b7443: $lastRunning = new \Datetime(); goto e53e5; d62bb: $now = new \DateTime("\156\x6f\167", new \DateTimeZone("\125\124\x43")); goto b7443; e63bc: fef84: goto B7468; bd855: } protected function getLastRunningTimestamp() { $lastRunningTimestamp = (int) $this->cache->load(self::CACHE_WARMER_CACHE_KEY); return $lastRunningTimestamp; } public function getCronJobCommand() { $cronJobCommand = sprintf("\160\x68\160\40\x25\x73\x2f\x62\x69\x6e\57\155\141\x67\x65\156\164\x6f\x20\155\x67\164\55\x76\141\x72\156\151\163\150\x3a\x63\141\143\150\x65\x2d\x77\x61\x72\x6d\x65\162", $this->directoryList->getRoot()); return $cronJobCommand; } }
