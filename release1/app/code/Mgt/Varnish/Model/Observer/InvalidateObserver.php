<?php
 namespace Mgt\Varnish\Model\Observer; use Magento\Framework\Event\ObserverInterface; class InvalidateObserver implements ObserverInterface { protected $config; protected $purgeCache; public function __construct(\Magento\PageCache\Model\Config $config, \Magento\CacheInvalidate\Model\PurgeCache $purgeCache) { $this->config = $config; $this->purgeCache = $purgeCache; } public function execute(\Magento\Framework\Event\Observer $observer) { goto E767e; efba7: if (!$object instanceof \Magento\Framework\DataObject\IdentityInterface) { goto Fe7f4; } goto E95ed; c061d: $this->purgeCache->sendPurgeRequest($tags); goto fc36c; A5d13: if (!count($tags)) { goto Cf992; } goto c061d; E95ed: $tags = $object->getIdentities(); goto A5d13; c6d48: $isFpcEnabled = $this->config->isEnabled(); goto F1219; F1219: if (!($cacheType == \Magento\PageCache\Model\Config::VARNISH && true === $isFpcEnabled)) { goto de1bf; } goto a365f; F6267: de1bf: goto b1e5b; E419b: Fe7f4: goto F6267; fc36c: Cf992: goto E419b; E767e: $cacheType = $this->config->getType(); goto c6d48; a365f: $object = $observer->getEvent()->getObject(); goto efba7; b1e5b: } }
