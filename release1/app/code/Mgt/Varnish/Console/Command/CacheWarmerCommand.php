<?php
 namespace Mgt\Varnish\Console\Command; use Symfony\Component\Console\Command\Command; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Filesystem\Filesystem; use Symfony\Component\Process\Process; class CacheWarmerCommand extends Command { const USER_AGENT = "\115\x67\x74\x56\141\162\x6e\x69\x73\x68\103\x72\x61\167\x6c\145\x72"; const CACHE_WARMER_CACHE_KEY = "\x4d\147\164\103\x61\x63\150\x65\127\141\x72\155\145\x72"; const CACHE_WARMER_CRAWLED_URLS = "\x4d\147\164\103\x61\x63\x68\x65\x57\x61\162\x6d\145\x72\x43\x72\141\x77\154\x65\144\125\162\x6c\x73"; protected $curlAdapter; protected $logger; protected $directoryList; protected $storeManager; protected $cache; protected $cachePurger; protected $lockFile; protected $isLocked; protected $varnishConfig; protected $urlResource; protected $urlQueueResource; protected $urlQueueCollection; public function __construct(\Magento\Framework\HTTP\Adapter\Curl $curlAdapter, \Psr\Log\LoggerInterface $logger, \Magento\Framework\App\Filesystem\DirectoryList $directoryList, \Magento\Store\Model\StoreManagerInterface $storeManager, \Mgt\Varnish\Model\Cache\Backend\File $cache, \Magento\CacheInvalidate\Model\PurgeCache $cachePurger, \Mgt\Varnish\Model\Cache\Config $varnishConfig, \Mgt\Varnish\Model\ResourceModel\Url $urlResource, \Mgt\Varnish\Model\ResourceModel\UrlQueue $urlQueueResource, \Mgt\Varnish\Model\ResourceModel\UrlQueue\Collection $urlQueueCollection) { goto ffbbe; acfac: $this->storeManager = $storeManager; goto a334a; D75d8: $this->urlQueueCollection = $urlQueueCollection; goto cab35; E659f: $this->directoryList = $directoryList; goto acfac; a334a: $this->cache = $cache; goto a06eb; A8390: $this->varnishConfig = $varnishConfig; goto a6534; D9ca8: $this->urlQueueResource = $urlQueueResource; goto D75d8; a06eb: $this->cachePurger = $cachePurger; goto A8390; ec779: $this->logger = $logger; goto E659f; a6534: $this->urlResource = $urlResource; goto D9ca8; cab35: parent::__construct(); goto db59a; ffbbe: $this->curlAdapter = $curlAdapter; goto ec779; db59a: } protected function configure() { goto c03d8; c03d8: $this->setName("\x6d\147\164\x2d\x76\x61\x72\156\151\x73\x68\x3a\143\141\143\150\145\55\167\141\x72\155\145\x72"); goto ea73c; ea73c: $this->setDescription("\x4d\x47\124\x20\126\141\x72\156\x69\x73\x68\40\103\x61\x63\150\x65\x20\x57\141\x72\155\145\162"); goto d4a47; d4a47: parent::configure(); goto ea840; ea840: } protected function execute(InputInterface $input, OutputInterface $output) { try { goto d64c1; bd595: if (!(false === $break)) { goto B7915; } goto Eec47; a9549: $i = 0; goto F2049; D192d: $urls = []; goto C0c06; f2ad5: $this->urlQueueCollection->setPageSize($numberOfThreads); goto E3d2d; Ca469: e7b78: goto d0819; b811c: goto e7b78; goto Ad6d5; ccadd: $this->urlQueueCollection->load(); goto ba3bc; b89b5: $break = true; goto ea3c9; Ad6d5: Ff235: goto D4ec1; cf06c: if (!($totalCpuUtilization > $cacheWarmerCpuLimit)) { goto f1a47; } goto F9a14; ba3bc: if (count($this->urlQueueCollection)) { goto E07b9; } goto f423d; e8def: $totalCpuUtilization = min($totalCpuUtilization, 100); goto D525b; cc3d1: $this->crawlUrls($urls, $output); goto F2f4e; Cbf1f: $numberOfProcessingUnits = $this->runCommand("\156\160\x72\157\x63"); goto a3355; d64c1: ini_set("\155\x65\x6d\157\162\x79\x5f\x6c\x69\x6d\151\164", "\x32\x30\x34\70\x4d"); goto e3e0d; e3e0d: if (false === $this->isLocked()) { goto Ff235; } goto Ba88e; fc5e3: E07b9: goto D192d; Ff172: $this->deleteExpiredUrls(); goto dde70; E3d2d: $this->urlQueueCollection->addOrder("\x70\x72\x69\157\x72\151\164\171"); goto ccadd; c3bf8: ad01e: goto C68dc; C6240: e2bb1: goto cc3d1; Ba88e: $output->writeln("\x43\141\x63\150\145\x20\x57\141\162\x6d\145\x72\x20\151\163\x20\x61\154\162\x65\141\x64\x79\40\x72\x75\x6e\156\x69\x6e\x67"); goto b811c; bcfd5: A5b6a: goto Ca469; Ac3aa: $isCacheWarmerCpuLimitEnabled = $this->varnishConfig->isCacheWarmerCpuLimitEnabled(); goto ebee3; D4ec1: $this->lock(); goto Ff172; Eec47: $numberOfThreads = $this->varnishConfig->getNumberOfCacheWarmerThreads(); goto bf7c8; C0c06: foreach ($this->urlQueueCollection as $urlQueue) { try { goto cc044; af39e: $url = sprintf("\45\x73\57\x25\x73", rtrim($store->getBaseUrl(), "\x2f"), ltrim($urlQueue->getPath(), "\x2f")); goto ffe53; E69dd: $store = $this->storeManager->getStore($storeId); goto af39e; cc044: $storeId = $urlQueue->getStoreId(); goto E69dd; ffe53: $urls[$urlQueue->getId()] = $url; goto e7030; e7030: } catch (\Exception $e) { } f1355: } goto C6240; ea3c9: e1811: goto B448e; a3355: $loadAverage = sys_getloadavg(); goto c968e; b5d27: $this->urlQueueCollection->clear(); goto f2ad5; C68dc: B7915: goto B548f; ec05e: d1b49: goto bd595; F9a14: $break = true; goto aceb3; E4f83: $this->updateTimestamp(); goto Ac3aa; F2049: e8626: goto E4f83; F2f4e: $this->deleteFromQueue($urls); goto c3bf8; c968e: $totalCpuUtilization = $loadAverage[0] * 100 / $numberOfProcessingUnits; goto e8def; D525b: $cacheWarmerCpuLimit = $this->varnishConfig->getCacheWarmerCpuLimit(); goto cf06c; dde70: $break = false; goto a9549; f6401: goto ad01e; goto fc5e3; f423d: $break = true; goto f6401; bf7c8: $i = $i + $numberOfThreads; goto b5d27; aceb3: $output->writeln(sprintf("\103\x75\162\x72\x65\156\164\x6c\171\40\x74\x68\x65\40\x43\x50\125\40\154\151\x6d\151\164\x20\150\141\163\40\x62\x65\x65\x6e\x20\162\x65\141\x63\x68\145\144\x2c\40\103\120\x55\72\40\x22\x25\x73\x20\160\x65\162\x63\x65\156\x74\42\x2c\x20\114\151\x6d\x69\164\x3a\x20\x22\x25\163\x20\160\x65\x72\143\x65\x6e\x74\x22", round($totalCpuUtilization), round($cacheWarmerCpuLimit))); goto b112e; d0819: return \Magento\Framework\Console\Cli::RETURN_SUCCESS; goto B8784; b112e: f1a47: goto ec05e; B448e: if ($break == false) { goto e8626; } goto bcfd5; ebee3: if (!(true === $isCacheWarmerCpuLimitEnabled)) { goto d1b49; } goto Cbf1f; B548f: if (!($i == 1000)) { goto e1811; } goto b89b5; B8784: } catch (\Exception $e) { goto Baadd; Cf827: return \Magento\Framework\Console\Cli::RETURN_FAILURE; goto B130a; Baadd: $errorMessage = $e->getMessage(); goto fa172; fa172: $output->writeln(sprintf("\x3c\145\x72\162\x6f\x72\76\x25\163\x3c\57\145\162\162\157\x72\x3e", $errorMessage)); goto Cf827; B130a: } } protected function updateTimestamp() { goto A322d; e7de3: $now = $now->getTimestamp(); goto A8104; A8104: $this->cache->save($now, self::CACHE_WARMER_CACHE_KEY); goto Abf20; A322d: $now = new \DateTime("\x6e\x6f\x77", new \DateTimeZone("\x55\124\x43")); goto e7de3; Abf20: } public function crawlUrls(array $urls, OutputInterface $output) { try { goto b71a2; E2974: D7ecc: goto c16ea; ce8a2: foreach ($urls as $url) { $output->writeln(sprintf("\x3c\x69\156\x66\157\76\x22\x25\x73\42\x20\x63\162\x61\x77\x6c\145\144\x3c\x2f\151\x6e\146\x6f\76", $url)); Ac767: } goto E2974; b71a2: $options = array(CURLOPT_USERAGENT => self::USER_AGENT, CURLOPT_SSL_VERIFYPEER => 0); goto ec31c; ec31c: $this->curlAdapter->multiRequest($urls, $options); goto ce8a2; c16ea: } catch (\Exception $e) { $errorMessage = sprintf("\x41\x6e\x20\x65\162\x72\157\x72\x20\157\x63\x63\165\x72\162\x65\144\40\144\x75\162\x69\x6e\x67\40\x63\x72\x61\x77\154\x69\x6e\x67\x20\x75\162\154\x73\54\x20\145\x72\162\157\162\40\x6d\x65\x73\163\x61\147\145\x3a\40\45\163", $e->getMessage()); $this->logger->error($errorMessage); } } protected function deleteExpiredUrls() { try { $this->urlResource->deleteExpiredUrls(); } catch (\Exception $e) { $errorMessage = sprintf("\101\156\40\x65\162\x72\157\x72\x20\x6f\143\x63\165\162\162\145\144\x20\x64\165\x72\151\156\x67\40\x64\x65\154\x65\164\x69\x6e\x67\x20\145\170\x70\151\162\x65\144\x20\x75\x72\x6c\x73\54\x20\x65\x72\162\x6f\162\40\155\x65\163\x73\x61\x67\x65\x3a\40\45\163", $e->getMessage()); $this->logger->error($errorMessage); } } public function deleteFromQueue(array $urls) { try { $urlIds = array_keys($urls); $this->urlQueueResource->deleteFromQueue($urlIds); } catch (\Exception $e) { $errorMessage = sprintf("\x41\x6e\x20\145\x72\x72\157\162\40\x6f\143\x63\165\x72\x72\x65\x64\x20\x64\165\162\151\156\147\40\x64\145\154\145\164\x69\156\x67\x20\165\162\154\x73\54\x20\145\x72\x72\157\x72\40\x6d\x65\x73\x73\141\x67\145\x3a\40\45\x73", $e->getMessage()); $this->logger->error($errorMessage); } } protected function getLockFile() { goto Ed931; c70f9: D6c7c: goto E761d; A2f08: $lockFileDirectory = $this->directoryList->getPath("\164\155\x70"); goto d61d5; Ed931: if (!(null === $this->lockFile)) { goto D6c7c; } goto A2f08; D8c4e: fwrite($this->lockFile, date("\162")); goto c70f9; b5eea: $filesystem->mkdir(dirname($lockFile)); goto c97dc; Dfce6: $this->lockFile = fopen($lockFile, "\x77"); goto f361f; B7d00: goto B407f; goto a5aca; ec7ba: $this->lockFile = fopen($lockFile, "\170"); goto B7d00; d61d5: $lockFile = sprintf("\45\163\x2f\x6d\147\x74\137\166\x61\x72\x6e\151\x73\x68\137\x63\x61\x63\x68\145\137\143\162\x61\167\154\x65\162\56\x6c\157\x63\153", $lockFileDirectory); goto e19fc; c97dc: if (is_file($lockFile)) { goto A25fb; } goto ec7ba; a5aca: A25fb: goto Dfce6; E761d: return $this->lockFile; goto eaa90; e19fc: $filesystem = new Filesystem(); goto b5eea; f361f: B407f: goto D8c4e; eaa90: } protected function lock() { goto D5ff4; D9588: flock($lockFile, LOCK_EX | LOCK_NB); goto a849f; eb991: $lockFile = $this->getLockFile(); goto D9588; a849f: return $this; goto Db802; D5ff4: $this->isLocked = true; goto eb991; Db802: } protected function unlock() { goto ccabe; ccabe: $this->isLocked = false; goto Cd7ee; Cd7ee: $lockFile = $this->getLockFile(); goto a42f9; d97d2: return $this; goto B321b; a42f9: flock($lockFile, LOCK_UN); goto d97d2; B321b: } protected function isLocked() { goto C0b91; D9b27: a0897: goto ee9dd; be1b1: return $this->isLocked; goto D9b27; e4dfd: flock($fp, LOCK_UN); goto bd60c; a004f: if (!flock($fp, LOCK_EX | LOCK_NB)) { goto D13af; } goto e4dfd; bd60c: return false; goto f49d0; f49d0: D13af: goto ac586; ac586: return true; goto de8f0; bb07f: E510b: goto be1b1; C0b91: if ($this->isLocked !== null) { goto E510b; } goto Bfb1a; de8f0: goto a0897; goto bb07f; Bfb1a: $fp = $this->getLockFile(); goto a004f; ee9dd: } protected function runCommand($command, $timeout = 30) { goto Bb7e3; E9fab: $output = trim($process->getOutput()); goto Af0f1; ea2c3: $process->run(); goto Df756; A7e3e: throw new \RuntimeException($process->getErrorOutput()); goto E3633; Af0f1: return $output; goto E9d86; Bb7e3: $process = Process::fromShellCommandline($command, "\x2f\164\x6d\160\57"); goto db513; db513: $process->setTimeout($timeout); goto ea2c3; Df756: if (!(false === $process->isSuccessful())) { goto a7b04; } goto A7e3e; E3633: a7b04: goto E9fab; E9d86: } public function __destruct() { $this->unlock(); } }
